Basics of Hashing (Storing and Retrieving data in O(1) [order of 1 OR constant time] time.
——————————————————————————————————————-

What is Hashing ?
Hashing is technique or mechanism, where you are store or retrieve data in Order of constant time. We can also call it Mapping technique(Mapping large domain key into a specific location in the hash table. The location is calculated from key itself.)

Hashing technique logic written in Hash Functions. Means Hash Function provide hashing technique.


What is hash table?
Hash table is one of the data structure (with constant size?), where it has bucket to store multiple records, it have indexes like Array. Using index we can retrieve data in Order of 1 (if we know index, here index is nothing but Hash code / hash value generated by hash function).

What is searchKey?
Key to input hash function to get hash code. [like email field in Employee object or sometime multiple fields?.]

What is hash function?
Take searchKey as a input and provide hash code, that used as a index in hash table.
Function provide hash code using object/search_key to store data/record in hash table faster.


They have following diff hash function mechanisms
Kmod10 => 24 mod 10 => 4 reminder mean, add data in 4th bucket.
MidSquare => 123 => 2*2 => 4 (midValue*midValue)
Folding Method => 123456 => 123+456 => 579 => store at 579 bucket

Note:
Hash Value or Hash Code same?
Yes, in the context of hashing, the terms "hash value" and "hash code" are often used interchangeably. Both terms refer to the numerical output generated by a hash function. 

The values returned by a hash function are called hash values, hash codes, digests, or simply hashes. The values are usually used to index a fixed-size table called a hash table. Use of a hash function to index a hash table is called hashing or scatter storage addressing.



Collision Resolution Techniques
———————————————

Chaining (Open hashing) [ Linked list in same bucket.]
Open Addressing (Closed hashing)
	—> Linear Probing  [if bucket filled then find and store in next available bucket]
	—> Quadratic Probing[ R + I^2]mod n (totalObj), R hash value, i number of checked buckets 
	—> Double Hashing 

